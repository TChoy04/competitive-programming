class FirstUnique {
public:
    queue<int>q;
    unordered_map<int,int>counts;
    FirstUnique(vector<int>& nums) {
        for(int& i : nums){
            add(i);
        }
    }
    
    int showFirstUnique() {
        if(q.size()==0) return -1;
        return q.front();
    }
    
    void add(int value) {
        q.push(value);
        counts[value]++;
        while(q.size()&& counts[q.front()]>1){
            q.pop();
        }
    }
};

/**
 * Your FirstUnique object will be instantiated and called as such:
 * FirstUnique* obj = new FirstUnique(nums);
 * int param_1 = obj->showFirstUnique();
 * obj->add(value);
 */
