/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        ListNode*temp = head;
        int n = 0;
        while(temp){
            temp = temp->next;
            n++;
        }
        if(k==0 || n==0) return head;
        k%=n;
        while(k--){
            ListNode* begin = head;
            temp = head;
            while(temp && temp->next && temp->next->next){
                temp = temp->next;
            }
            ListNode* newBegin = temp->next;
            newBegin->next = begin;
            temp->next = NULL;
            head = newBegin;
        }
        return head;
    }
};
